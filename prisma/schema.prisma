generator client {
  provider = "prisma-client-js"
}

datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

enum Role {
  USER
  ADMIN
}

enum TransactionType {
  INCOME
  OUTCOME
  REVENUE
}

model Users {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  wallets       Wallets[]
  radar         Radar[]
  accountInvest AccountInvest[]

  @@map("users")
}

model Wallets {
  id          String   @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  transactions Transactions[]
  user         Users          @relation(fields: [userId], references: [id])
  userId       String

  @@map("wallets")
}

model Funds {
  id          String   @id @default(uuid())
  ticker      String   @unique
  name        String
  description String?
  type        String
  segment     String
  mandate     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  transactions Transactions[]
  radar        Radar[]
  dataScrap    DataScrap[]

  @@map("funds")
}

model Transactions {
  id         String    @id @default(uuid())
  quotas     Int
  price      Float
  purchaseAt DateTime
  saleAt     DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  fund     Funds   @relation(fields: [fundId], references: [id])
  fundId   String
  wallet   Wallets @relation(fields: [walletId], references: [id])
  walletId String

  @@map("transactions")
}

model Radar {
  id        String   @id @default(uuid())
  fundId    String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user Users @relation(fields: [userId], references: [id])
  fund Funds @relation(fields: [fundId], references: [id])

  @@map("radars")
}

model DataScrap {
  id        String   @id @default(uuid())
  fundId    String   @unique
  data      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  fund Funds @relation(fields: [fundId], references: [id])

  @@map("dataScraps")
}

model AccountInvest {
  id          String   @id @default(uuid())
  name        String
  description String?
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user                     Users                      @relation(fields: [userId], references: [id])
  accountInvestTransaction AccountInvestTransaction[]

  @@map("accountInvest")
}

model AccountInvestTransaction {
  id                   String          @id @default(uuid())
  type                 TransactionType @default(INCOME)
  value                Float           @default(0)
  accruedIncome        Float           @default(0)
  date                 DateTime
  accountTransactionId String
  createdAt            DateTime        @default(now())
  updatedAt            DateTime        @updatedAt

  accountInvest AccountInvest @relation(fields: [accountTransactionId], references: [id])

  @@map("accountInvestTransaction")
}
